8.1. General Trees                                                                             301
      8.1.1 Tree Deﬁnitions and Properties
          A tree is an abstract data type that stores elements hierarchically. With the excep-
          tion of the top element, each element in a tree has a parent element and zero or
          more children elements. A tree is usually visualized by placing elements inside
          ovals or rectangles, and by drawing the connections between parents and children
          with straight lines. (See Figure 8.2.) We typically call the top element the root
          of the tree, but it is drawn as the highest element, with the other elements being
          connected below (just the opposite of a botanical tree).
                                              Electronics R’Us
                           R&D        Sales      Purchasing       Manufacturing
                             Domestic     International        TV    CD    Tuner
                                Canada   S. America     Overseas
                                           Africa    Europe    Asia   Australia
          Figure 8.2: A tree with 17 nodes representing the organization of a ﬁctitious cor-
          poration. The root stores Electronics R’Us. The children of the root store R&D,
          Sales, Purchasing, and Manufacturing. The internal nodes store Sales, Interna-
          tional, Overseas, Electronics R’Us, and Manufacturing.
          Formal Tree Deﬁnition
          Formally, we deﬁne a tree T as a set of nodes storing elements such that the nodes
          have a parent-child relationship that satisﬁes the following properties:
              • If T is nonempty, it has a special node, called the root of T , that has no parent.
              • Each node v of T different from the root has a unique parent node w; every
                 node with parent w is a child of w.
          Note that according to our deﬁnition, a tree can be empty, meaning that it does not
          have any nodes. This convention also allows us to deﬁne a tree recursively such
          that a tree T is either empty or consists of a node r, called the root of T , and a
          (possibly empty) set of subtrees whose roots are the children of r.
