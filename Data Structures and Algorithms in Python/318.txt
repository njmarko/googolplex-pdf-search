7.8. Exercises                                                                                  297
           C-7.38 There is a simple, but inefﬁcient, algorithm, called bubble-sort, for sorting
                   a list L of n comparable elements. This algorithm scans the list n−1 times,
                   where, in each scan, the algorithm compares the current element with the
                   next one and swaps them if they are out of order. Implement a bubble sort
                   function that takes a positional list L as a parameter. What is the running
                   time of this algorithm, assuming the positional list is implemented with a
                   doubly linked list?
           C-7.39 To better model a FIFO queue in which entries may be deleted before
                   reaching the front, design a PositionalQueue class that supports the com-
                   plete queue ADT, yet with enqueue returning a position instance and sup-
                   port for a new method, delete(p), that removes the element associated
                   with position p from the queue. You may use the adapter design pattern
                   (Section 6.1.2), using a PositionalList as your storage.
           C-7.40 Describe an efﬁcient method for maintaining a favorites list L, with move-
                   to-front heuristic, such that elements that have not been accessed in the
                   most recent n accesses are automatically purged from the list.
           C-7.41 Exercise C-5.29 introduces the notion of a natural join of two databases.
                   Describe and analyze an efﬁcient algorithm for computing the natural join
                   of a linked list A of n pairs and a linked list B of m pairs.
           C-7.42 Write a Scoreboard class that maintains the top 10 scores for a game ap-
                   plication using a singly linked list, rather than the array that was used in
                   Section 5.5.1.
           C-7.43 Describe a method for performing a card shufﬂe of a list of 2n elements,
                   by converting it into two lists. A card shufﬂe is a permutation where a list
                   L is cut into two lists, L1 and L2 , where L1 is the ﬁrst half of L and L2 is the
                   second half of L, and then these two lists are merged into one by taking
                   the ﬁrst element in L1 , then the ﬁrst element in L2 , followed by the second
                   element in L1 , the second element in L2 , and so on.
      Projects
            P-7.44 Write a simple text editor that stores and displays a string of characters
                   using the positional list ADT, together with a cursor object that highlights
                   a position in this string. A simple interface is to print the string and then
                   to use a second line of output to underline the position of the cursor. Your
                   editor should support the following operations:
                       • left: Move cursor left one character (do nothing if at beginning).
                       • right: Move cursor right one character (do nothing if at end).
                       • insert c: Insert the character c just after the cursor.
                       • delete: Delete the character just after the cursor (do nothing at end).
