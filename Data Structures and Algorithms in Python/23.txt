2                                                                Chapter 1. Python Primer
  1.1    Python Overview
         Building data structures and algorithms requires that we communicate detailed in-
         structions to a computer. An excellent way to perform such communications is
         using a high-level computer language, such as Python. The Python programming
         language was originally developed by Guido van Rossum in the early 1990s, and
         has since become a prominently used language in industry and education. The sec-
         ond major version of the language, Python 2, was released in 2000, and the third
         major version, Python 3, released in 2008. We note that there are signiﬁcant in-
         compatibilities between Python 2 and Python 3. This book is based on Python 3
         (more speciﬁcally, Python 3.1 or later). The latest version of the language is freely
         available at www.python.org, along with documentation and tutorials.
             In this chapter, we provide an overview of the Python programming language,
         and we continue this discussion in the next chapter, focusing on object-oriented
         principles. We assume that readers of this book have prior programming experi-
         ence, although not necessarily using Python. This book does not provide a com-
         plete description of the Python language (there are numerous language references
         for that purpose), but it does introduce all aspects of the language that are used in
         code fragments later in this book.
      1.1.1 The Python Interpreter
         Python is formally an interpreted language. Commands are executed through a
         piece of software known as the Python interpreter. The interpreter receives a com-
         mand, evaluates that command, and reports the result of the command. While the
         interpreter can be used interactively (especially when debugging), a programmer
         typically deﬁnes a series of commands in advance and saves those commands in a
         plain text ﬁle known as source code or a script. For Python, source code is conven-
         tionally stored in a ﬁle named with the .py sufﬁx (e.g., demo.py).
             On most operating systems, the Python interpreter can be started by typing
         python from the command line. By default, the interpreter starts in interactive
         mode with a clean workspace. Commands from a predeﬁned script saved in a
         ﬁle (e.g., demo.py) are executed by invoking the interpreter with the ﬁlename as
         an argument (e.g., python demo.py), or using an additional -i ﬂag in order to
         execute a script and then enter interactive mode (e.g., python -i demo.py).
             Many integrated development environments (IDEs) provide richer software
         development platforms for Python, including one named IDLE that is included
         with the standard Python distribution. IDLE provides an embedded text-editor with
         support for displaying and editing Python code, and a basic debugger, allowing
         step-by-step execution of a program while examining key variable values.
