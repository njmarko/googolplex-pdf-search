18                                                               Chapter 1. Python Primer
 1.4    Control Flow
        In this section, we review Python’s most fundamental control structures: condi-
        tional statements and loops. Common to all control structures is the syntax used
        in Python for deﬁning blocks of code. The colon character is used to delimit the
        beginning of a block of code that acts as a body for a control structure. If the body
        can be stated as a single executable statement, it can technically placed on the same
        line, to the right of the colon. However, a body is more typically typeset as an
        indented block starting on the line following the colon. Python relies on the inden-
        tation level to designate the extent of that block of code, or any nested blocks of
        code within. The same principles will be applied when designating the body of a
        function (see Section 1.5), and the body of a class (see Section 2.3).
     1.4.1 Conditionals
        Conditional constructs (also known as if statements) provide a way to execute a
        chosen block of code based on the run-time evaluation of one or more Boolean
        expressions. In Python, the most general form of a conditional is written as follows:
             if ﬁrst condition:
                ﬁrst body
             elif second condition:
                second body
             elif third condition:
                third body
             else:
                fourth body
        Each condition is a Boolean expression, and each body contains one or more com-
        mands that are to be executed conditionally. If the ﬁrst condition succeeds, the ﬁrst
        body will be executed; no other conditions or bodies are evaluated in that case.
        If the ﬁrst condition fails, then the process continues in similar manner with the
        evaluation of the second condition. The execution of this overall construct will
        cause precisely one of the bodies to be executed. There may be any number of
        elif clauses (including zero), and the ﬁnal else clause is optional. As described on
        page 7, nonboolean types may be evaluated as Booleans with intuitive meanings.
        For example, if response is a string that was entered by a user, and we want to
        condition a behavior on this being a nonempty string, we may write
             if response:
        as a shorthand for the equivalent,
             if response !=     :
