1.2. Objects in Python                                                                        7
      1.2.3 Python’s Built-In Classes
          Table 1.2 provides a summary of commonly used, built-in classes in Python; we
          take particular note of which classes are mutable and which are immutable. A class
          is immutable if each object of that class has a ﬁxed value upon instantiation that
          cannot subsequently be changed. For example, the ﬂoat class is immutable. Once
          an instance has been created, its value cannot be changed (although an identiﬁer
          referencing that object can be reassigned to a different value).
                    Class        Description                             Immutable?
                    bool         Boolean value                                 
                    int          integer (arbitrary magnitude)                 
                    ﬂoat         ﬂoating-point number                          
                    list         mutable sequence of objects
                    tuple        immutable sequence of objects                 
                    str          character string                              
                    set          unordered set of distinct objects
                    frozenset    immutable form of set class                   
                    dict         associative mapping (aka dictionary)
                          Table 1.2: Commonly used built-in classes for Python
               In this section, we provide an introduction to these classes, discussing their
          purpose and presenting several means for creating instances of the classes. Literal
          forms (such as 98.6) exist for most of the built-in classes, and all of the classes
          support a traditional constructor form that creates instances that are based upon
          one or more existing values. Operators supported by these classes are described in
          Section 1.3. More detailed information about these classes can be found in later
          chapters as follows: lists and tuples (Chapter 5); strings (Chapters 5 and 13, and
          Appendix A); sets and dictionaries (Chapter 10).
          The bool Class
          The bool class is used to manipulate logical (Boolean) values, and the only two
          instances of that class are expressed as the literals True and False. The default
          constructor, bool( ), returns False, but there is no reason to use that syntax rather
          than the more direct literal form. Python allows the creation of a Boolean value
          from a nonboolean type using the syntax bool(foo) for value foo. The interpretation
          depends upon the type of the parameter. Numbers evaluate to False if zero, and
          True if nonzero. Sequences and other container types, such as strings and lists,
          evaluate to False if empty and True if nonempty. An important application of this
          interpretation is the use of a nonboolean value as a condition in a control structure.
