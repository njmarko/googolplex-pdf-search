54                                                            Chapter 1. Python Primer
   Projects
       P-1.29 Write a Python program that outputs all possible strings formed by using
              the characters c , a , t , d , o , and g exactly once.
       P-1.30 Write a Python program that can take a positive integer greater than 2 as
              input and write out the number of times one must repeatedly divide this
              number by 2 before getting a value less than 2.
       P-1.31 Write a Python program that can “make change.” Your program should
              take two numbers as input, one that is a monetary amount charged and the
              other that is a monetary amount given. It should then return the number
              of each kind of bill and coin to give back as change for the difference
              between the amount given and the amount charged. The values assigned
              to the bills and coins can be based on the monetary system of any current
              or former government. Try to design your program so that it returns as
              few bills and coins as possible.
       P-1.32 Write a Python program that can simulate a simple calculator, using the
              console as the exclusive input and output device. That is, each input to the
              calculator, be it a number, like 12.34 or 1034, or an operator, like + or =,
              can be done on a separate line. After each such input, you should output
              to the Python console what would be displayed on your calculator.
       P-1.33 Write a Python program that simulates a handheld calculator. Your pro-
              gram should process input from the Python console representing buttons
              that are “pushed,” and then output the contents of the screen after each op-
              eration is performed. Minimally, your calculator should be able to process
              the basic arithmetic operations and a reset/clear operation.
       P-1.34 A common punishment for school children is to write out a sentence mul-
              tiple times. Write a Python stand-alone program that will write out the
              following sentence one hundred times: “I will never spam my friends
              again.” Your program should number each of the sentences and it should
              make eight different random-looking typos.
       P-1.35 The birthday paradox says that the probability that two people in a room
              will have the same birthday is more than half, provided n, the number of
              people in the room, is more than 23. This property is not really a paradox,
              but many people ﬁnd it surprising. Design a Python program that can test
              this paradox by a series of experiments on randomly generated birthdays,
              which test this paradox for n = 5, 10, 15, 20, . . . , 100.
       P-1.36 Write a Python program that inputs a list of words, separated by white-
              space, and outputs how many times each word appears in the list. You
              need not worry about efﬁciency at this point, however, as this topic is
              something that will be addressed later in this book.
