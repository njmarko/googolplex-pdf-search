82                                         Chapter 2. Object-Oriented Programming
 2.4 Inheritance
     A natural way to organize various structural components of a software package
     is in a hierarchical fashion, with similar abstract deﬁnitions grouped together in
     a level-by-level manner that goes from speciﬁc to more general as one traverses
     up the hierarchy. An example of such a hierarchy is shown in Figure 2.4. Using
     mathematical notations, the set of houses is a subset of the set of buildings, but a
     superset of the set of ranches. The correspondence between levels is often referred
     to as an “is a” relationship, as a house is a building, and a ranch is a house.
                                              Building
                 Apartment                             House                   Commercial
                                                                                 Building
        Low-rise           High-rise        Two-story          Ranch            Skyscraper
       Apartment           Apartment         House
       Figure 2.4: An example of an “is a” hierarchy involving architectural buildings.
          A hierarchical design is useful in software development, as common function-
     ality can be grouped at the most general level, thereby promoting reuse of code,
     while differentiated behaviors can be viewed as extensions of the general case, In
     object-oriented programming, the mechanism for a modular and hierarchical orga-
     nization is a technique known as inheritance. This allows a new class to be deﬁned
     based upon an existing class as the starting point. In object-oriented terminology,
     the existing class is typically described as the base class, parent class, or super-
     class, while the newly deﬁned class is known as the subclass or child class.
          There are two ways in which a subclass can differentiate itself from its su-
     perclass. A subclass may specialize an existing behavior by providing a new im-
     plementation that overrides an existing method. A subclass may also extend its
     superclass by providing brand new methods.
