3.5. Exercises                                                                              145
           C-3.44 Communication security is extremely important in computer networks,
                  and one way many network protocols achieve security is to encrypt mes-
                  sages. Typical cryptographic schemes for the secure transmission of mes-
                  sages over such networks are based on the fact that no efﬁcient algorithms
                  are known for factoring large integers. Hence, if we can represent a secret
                  message by a large prime number p, we can transmit, over the network,
                  the number r = p · q, where q > p is another large prime number that acts
                  as the encryption key. An eavesdropper who obtains the transmitted num-
                  ber r on the network would have to factor r in order to ﬁgure out the secret
                  message p.
                  Using factoring to ﬁgure out a message is very difﬁcult without knowing
                  the encryption key q. To understand why, consider the following naive
                  factoring algorithm:
                  for p in range(2,r):
                    if r % p == 0:                                     # if p divides r
                       return The secret message is p!
                     a. Suppose that the eavesdropper uses the above algorithm and has a
                        computer that can carry out in 1 microsecond (1 millionth of a sec-
                        ond) a division between two integers of up to 100 bits each. Give an
                        estimate of the time that it will take in the worst case to decipher the
                        secret message p if the transmitted message r has 100 bits.
                     b. What is the worst-case time complexity of the above algorithm?
                        Since the input to the algorithm is just one large number r, assume
                        that the input size n is the number of bytes needed to store r, that is,
                        n = (log2 r)/8 + 1, and that each division takes time O(n).
           C-3.45 A sequence S contains n − 1 unique integers in the range [0, n − 1], that
                  is, there is one number from this range that is not in S. Design an O(n)-
                  time algorithm for ﬁnding that number. You are only allowed to use O(1)
                  additional space besides the sequence S itself.
           C-3.46 Al says he can prove that all sheep in a ﬂock are the same color:
                  Base case: One sheep. It is clearly the same color as itself.
                  Induction step: A ﬂock of n sheep. Take a sheep, a, out. The remaining
                  n − 1 are all the same color by induction. Now put sheep a back in and
                  take out a different sheep, b. By induction, the n − 1 sheep (now with a)
                  are all the same color. Therefore, all the sheep in the ﬂock are the same
                  color. What is wrong with Al’s “justiﬁcation”?
           C-3.47 Let S be a set of n lines in the plane such that no two are parallel and
                  no three meet in the same point. Show, by induction, that the lines in S
                  determine Θ(n2 ) intersection points.
