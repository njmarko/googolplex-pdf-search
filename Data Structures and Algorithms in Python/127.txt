106                                         Chapter 2. Object-Oriented Programming
       C-2.27 In Section 2.3.5, we note that our version of the Range class has im-
               plicit support for iteration, due to its explicit support of both len
               and getitem . The class also receives implicit support of the Boolean
               test, “k in r” for Range r. This test is evaluated based on a forward itera-
               tion through the range, as evidenced by the relative quickness of the test
               2 in Range(10000000) versus 9999999 in Range(10000000). Provide a
               more efﬁcient implementation of the contains method to determine
               whether a particular value lies within a given range. The running time of
               your method should be independent of the length of the range.
       C-2.28 The PredatoryCreditCard class of Section 2.4.1 provides a process month
               method that models the completion of a monthly cycle. Modify the class
               so that once a customer has made ten calls to charge in the current month,
               each additional call to that function results in an additional $1 surcharge.
       C-2.29 Modify the PredatoryCreditCard class from Section 2.4.1 so that a cus-
               tomer is assigned a minimum monthly payment, as a percentage of the
               balance, and so that a late fee is assessed if the customer does not subse-
               quently pay that minimum amount before the next monthly cycle.
       C-2.30 At the close of Section 2.4.1, we suggest a model in which the CreditCard
               class supports a nonpublic method, set balance(b), that could be used
               by subclasses to affect a change to the balance, without directly accessing
               the balance data member. Implement such a model, revising both the
               CreditCard and PredatoryCreditCard classes accordingly.
       C-2.31 Write a Python class that extends the Progression class so that each value
               in the progression is the absolute value of the difference between the pre-
               vious two values. You should include a constructor that accepts a pair of
               numbers as the ﬁrst two values, using 2 and 200 as the defaults.
       C-2.32 Write a Python class that extends the Progression class so that each value
               in the progression is the square root of the previous value. (Note that
               you can no longer represent each value with an integer.) Your construc-
               tor should accept an optional parameter specifying the start value, using
               65, 536 as a default.
    Projects
        P-2.33 Write a Python program that inputs a polynomial in standard algebraic
               notation and outputs the ﬁrst derivative of that polynomial.
        P-2.34 Write a Python program that inputs a document and then outputs a bar-
               chart plot of the frequencies of each alphabet character that appears in
               that document.
